services:
  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
    depends_on:
      wordpress:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html
    restart: unless-stopped
    networks:
      - network

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
    depends_on:
      - mariadb
    env_file:
      - .env
    volumes:
      - wordpress_data:/var/www/html
    restart: unless-stopped
    networks:
      - network
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 9000"]
      interval: 5s
      timeout: 5s
      retries: 5

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
    env_file:
      - .env
    volumes:
      - mariadb_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - network
  sftp:
    build:
      context: ./requirements/sftp
      args:
        FTP_USER: ${FTP_USER}
        FTP_PASSWORD: ${FTP_PASSWORD}
    container_name: sftp
    ports:
      - "2222:22"
    env_file:
      - .env
    volumes:
      - wordpress_data:/home/${FTP_USER}/upload
    networks:
      - network
    restart: unless-stopped
  adminer:
    build:
      context: ./requirements/adminer
    container_name: adminer
    depends_on:
      - mariadb
    env_file:
      - .env
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - network

  redis:
    build:
      context: ./requirements/redis
    container_name: redis
    expose:
      - "6379"
    networks:
      - network
    restart: unless-stopped

  uptimekuma:
    build:
      context: ./requirements/uptimekuma
    container_name: uptimekuma
    depends_on:
      - mariadb
    ports:
      - "3001:3001"
    env_file:
      - .env
    volumes:
      - uptimekuma_data:/app/data
    networks:
      - network
    restart: unless-stopped

  ostjourney:
    build:
      context: ./requirements/ostjourney
    container_name: ostjourney
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - ostjourney_data:/app/OSTJourney/instance
      - ostjourney_songs:/app/OSTJourney/songs
    networks:
      - network
    restart: unless-stopped






networks:
  network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: /home/${LOGIN}/data/mysql
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: /home/${LOGIN}/data/wordpress
      o: bind
  uptimekuma_data:
    driver: local
    driver_opts:
      type: none
      device: /home/${LOGIN}/data/uptimekuma
      o: bind
  ostjourney_data:
    driver: local
    driver_opts:
      type: none
      device: /home/${LOGIN}/data/ostjourney
      o: bind
  ostjourney_songs:
    driver: local
    driver_opts:
      type: none
      device: /home/${LOGIN}/songs
      o: bind